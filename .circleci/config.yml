# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  install:
    docker:
      - image: circleci/node:10.13-browsers
    working_directory: /tmp/resume-andrew-paettie

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}

      - run: npm install

      - save_cache:
          paths:
          - node_modules
          key: dependencies-{{ checksum "package.json" }}
  lint:
    docker:
      - image: circleci/node:10.13-browsers
    working_directory: /tmp/resume-andrew-paettie
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run: npm run lint
  unit-test:
    docker:
      - image: circleci/node:10.13-browsers
    parallelism: 1
    working_directory: /tmp/resume-andrew-paettie
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run: npm run test-ci $(circleci tests glob "src/**/*.test.js" | circleci tests split )
      - store_artifacts:
          path: /tmp/resume-andrew-paettie/reports
      - store_test_results:
          path: /tmp/resume-andrew-paettie/reports/junit

  integration-test:
    docker:
      - image: circleci/node:10.13-browsers
    parallelism: 2
    working_directory: /tmp/resume-andrew-paettie
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run: npm run int-test-ci $(circleci tests glob "src/**/*.int.js" | circleci tests split --split-by=timings)
      - store_artifacts:
          path: /tmp/resume-andrew-paettie/reports
      - store_test_results:
          path: /tmp/resume-andrew-paettie/reports/junit

  build:
    docker:
      - image: circleci/node:10.13-browsers
    working_directory: /tmp/resume-andrew-paettie
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run: npm run build
      - persist_to_workspace:
          root: /tmp/resume-andrew-paettie/
          paths:
            - build/*
  deploy-test:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: /tmp/resume-andrew-paettie/
      - aws-cli/setup
      - run:
          command: |
            aws s3 sync build s3://andrewpaettie.test.com --delete --acl public-read

  deploy-prod:
    docker:
      - image: circleci/node:10.13-browsers
    working_directory: /tmp/resume-andrew-paettie
    steps:
      - attach_workspace:
          at: /tmp/resume-andrew-paettie/
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install python-dev python-pip
            sudo pip install awscli
      - run:
          command: |
            aws s3 sync build s3://andrewpaettie.com --delete --acl public-read --cache-control max-age=604800;
            aws configure set preview.cloudfront true;
            aws cloudfront create-invalidation --distribution-id=E1TCY90NW8U3BV --paths \
             /asset-manifest.json \
             /manifest.json \
             /manifest.png \
             /robots.txt \
             /favicon.ico \
             /service-worker.js \
             /200.html \
             /index.html \
             /img/flappy.jpg \
             /img/react-logo.svg \
             /img/ml-stats.png \
             /img/pdf.png \
             /img/loan-amortization.png \
             /img/ctf.png \
             /img/heli-game.png \
             /img/ai-brain.jpg \
             /img/andrew-paettie-having-fun.jpg \
             /img/Mars-moo.png \
             /img/this-site.png \
             /projects/index.html \
             /resume/index.html \
             /static/resume/resume-Andrew-Paettie.docx \
             /static/resume/resume-Andrew-Paettie.pdf

orbs:
  aws-cli: circleci/aws-cli@1.0.0
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install
      - lint:
          requires:
            - install
      - unit-test:
          requires:
            - install
      - integration-test:
          requires:
          - install
      - build:
          requires:
            - install
      - deploy-test:
          requires:
            - lint
            - unit-test
            - integration-test
            - build
      - deploy-prod:
          requires:
            - lint
            - unit-test
            - integration-test
            - build
          filters:
            branches:
              only: master